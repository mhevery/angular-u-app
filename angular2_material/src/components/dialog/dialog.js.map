{"version":3,"sources":["dialog.js"],"names":[],"mappings":"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","file":"angular2_material/src/components/dialog/dialog.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Component, Directive, View, Parent, ElementRef, DynamicComponentLoader, DomRenderer } from 'angular2/angular2';\r\nimport { bind, Injectable, forwardRef } from 'angular2/di';\r\nimport { PromiseWrapper } from 'angular2/src/facade/async';\r\nimport { isPresent } from 'angular2/src/facade/lang';\r\nimport { DOM } from 'angular2/src/dom/dom_adapter';\r\nimport { KEY_ESC } from 'angular2_material/src/core/constants';\r\n// TODO(jelbourn): Opener of dialog can control where it is rendered.\r\n// TODO(jelbourn): body scrolling is disabled while dialog is open.\r\n// TODO(jelbourn): Don't manually construct and configure a DOM element. See #1402\r\n// TODO(jelbourn): Wrap focus from end of dialog back to the start. Blocked on #1251\r\n// TODO(jelbourn): Focus the dialog element when it is opened.\r\n// TODO(jelbourn): Real dialog styles.\r\n// TODO(jelbourn): Pre-built `alert` and `confirm` dialogs.\r\n// TODO(jelbourn): Animate dialog out of / into opening element.\r\n/**\r\n * Service for opening modal dialogs.\r\n */\r\nexport let MdDialog = class {\r\n    constructor(loader, domRenderer) {\r\n        this.componentLoader = loader;\r\n        this.domRenderer = domRenderer;\r\n    }\r\n    /**\r\n     * Opens a modal dialog.\r\n     * @param type The component to open.\r\n     * @param elementRef The logical location into which the component will be opened.\r\n     * @param parentInjector\r\n     * @param options\r\n     * @returns Promise for a reference to the dialog.\r\n     */\r\n    open(type, elementRef, parentInjector, options = null) {\r\n        var config = isPresent(options) ? options : new MdDialogConfig();\r\n        // Create the dialogRef here so that it can be injected into the content component.\r\n        var dialogRef = new MdDialogRef();\r\n        var dialogRefBinding = bind(MdDialogRef).toValue(dialogRef);\r\n        var contentInjector = parentInjector.resolveAndCreateChild([dialogRefBinding]);\r\n        var backdropRefPromise = this._openBackdrop(elementRef, contentInjector);\r\n        // First, load the MdDialogContainer, into which the given component will be loaded.\r\n        return this.componentLoader.loadIntoNewLocation(MdDialogContainer, elementRef)\r\n            .then(containerRef => {\r\n            // TODO(tbosch): clean this up when we have custom renderers\r\n            // (https://github.com/angular/angular/issues/1807)\r\n            // TODO(jelbourn): Don't use direct DOM access. Need abstraction to create an element\r\n            // directly on the document body (also needed for web workers stuff).\r\n            // Create a DOM node to serve as a physical host element for the dialog.\r\n            var dialogElement = this.domRenderer.getRootNodes(containerRef.hostView.render)[0];\r\n            DOM.appendChild(DOM.query('body'), dialogElement);\r\n            // TODO(jelbourn): Use hostProperties binding to set these once #1539 is fixed.\r\n            // Configure properties on the host element.\r\n            DOM.addClass(dialogElement, 'md-dialog');\r\n            DOM.setAttribute(dialogElement, 'tabindex', '0');\r\n            // TODO(jelbourn): Do this with hostProperties (or another rendering abstraction) once\r\n            // ready.\r\n            if (isPresent(config.width)) {\r\n                DOM.setStyle(dialogElement, 'width', config.width);\r\n            }\r\n            if (isPresent(config.height)) {\r\n                DOM.setStyle(dialogElement, 'height', config.height);\r\n            }\r\n            dialogRef.containerRef = containerRef;\r\n            // Now load the given component into the MdDialogContainer.\r\n            return this.componentLoader.loadNextToExistingLocation(type, containerRef.instance.contentRef, contentInjector)\r\n                .then(contentRef => {\r\n                // Wrap both component refs for the container and the content so that we can return\r\n                // the `instance` of the content but the dispose method of the container back to the\r\n                // opener.\r\n                dialogRef.contentRef = contentRef;\r\n                containerRef.instance.dialogRef = dialogRef;\r\n                backdropRefPromise.then(backdropRef => {\r\n                    dialogRef.whenClosed.then((_) => { backdropRef.dispose(); });\r\n                });\r\n                return dialogRef;\r\n            });\r\n        });\r\n    }\r\n    /** Loads the dialog backdrop (transparent overlay over the rest of the page). */\r\n    _openBackdrop(elementRef, injector) {\r\n        return this.componentLoader.loadIntoNewLocation(MdBackdrop, elementRef, injector)\r\n            .then((componentRef) => {\r\n            // TODO(tbosch): clean this up when we have custom renderers\r\n            // (https://github.com/angular/angular/issues/1807)\r\n            var backdropElement = this.domRenderer.getRootNodes(componentRef.hostView.render)[0];\r\n            DOM.addClass(backdropElement, 'md-backdrop');\r\n            DOM.appendChild(DOM.query('body'), backdropElement);\r\n            return componentRef;\r\n        });\r\n    }\r\n    alert(message, okMessage) {\r\n        throw \"Not implemented\";\r\n    }\r\n    confirm(message, okMessage, cancelMessage) {\r\n        throw \"Not implemented\";\r\n    }\r\n};\r\nMdDialog = __decorate([\r\n    Injectable(), \r\n    __metadata('design:paramtypes', [DynamicComponentLoader, DomRenderer])\r\n], MdDialog);\r\n/**\r\n * Reference to an opened dialog.\r\n */\r\nexport class MdDialogRef {\r\n    constructor() {\r\n        this._contentRef = null;\r\n        this.containerRef = null;\r\n        this.isClosed = false;\r\n        this.contentRefDeferred = PromiseWrapper.completer();\r\n        this.whenClosedDeferred = PromiseWrapper.completer();\r\n    }\r\n    set contentRef(value) {\r\n        this._contentRef = value;\r\n        this.contentRefDeferred.resolve(value);\r\n    }\r\n    /** Gets the component instance for the content of the dialog. */\r\n    get instance() {\r\n        if (isPresent(this._contentRef)) {\r\n            return this._contentRef.instance;\r\n        }\r\n        // The only time one could attempt to access this property before the value is set is if an\r\n        // access occurs during\r\n        // the constructor of the very instance they are trying to get (which is much more easily\r\n        // accessed as `this`).\r\n        throw \"Cannot access dialog component instance *from* that component's constructor.\";\r\n    }\r\n    /** Gets a promise that is resolved when the dialog is closed. */\r\n    get whenClosed() {\r\n        return this.whenClosedDeferred.promise;\r\n    }\r\n    /** Closes the dialog. This operation is asynchronous. */\r\n    close(result = null) {\r\n        this.contentRefDeferred.promise.then((_) => {\r\n            if (!this.isClosed) {\r\n                this.isClosed = true;\r\n                this.containerRef.dispose();\r\n                this.whenClosedDeferred.resolve(result);\r\n            }\r\n        });\r\n    }\r\n}\r\n/** Confiuration for a dialog to be opened. */\r\nexport class MdDialogConfig {\r\n    constructor() {\r\n        // Default configuration.\r\n        this.width = null;\r\n        this.height = null;\r\n    }\r\n}\r\n/**\r\n * Container for user-provided dialog content.\r\n */\r\nlet MdDialogContainer = class {\r\n    constructor() {\r\n        this.contentRef = null;\r\n        this.dialogRef = null;\r\n    }\r\n    wrapFocus() {\r\n        // Return the focus to the host element. Blocked on #1251.\r\n    }\r\n    documentKeypress(event) {\r\n        if (event.keyCode == KEY_ESC) {\r\n            this.dialogRef.close();\r\n        }\r\n    }\r\n};\r\nMdDialogContainer = __decorate([\r\n    Component({\r\n        selector: 'md-dialog-container',\r\n        host: { '(body:^keydown)': 'documentKeypress($event)' },\r\n    }),\r\n    View({\r\n        templateUrl: 'angular2_material/src/components/dialog/dialog.html',\r\n        directives: [forwardRef(() => MdDialogContent)]\r\n    }), \r\n    __metadata('design:paramtypes', [])\r\n], MdDialogContainer);\r\n/**\r\n * Simple decorator used only to communicate an ElementRef to the parent MdDialogContainer as the\r\n * location\r\n * for where the dialog content will be loaded.\r\n */\r\nlet MdDialogContent = class {\r\n    constructor(dialogContainer, elementRef) {\r\n        dialogContainer.contentRef = elementRef;\r\n    }\r\n};\r\nMdDialogContent = __decorate([\r\n    Directive({ selector: 'md-dialog-content' }),\r\n    __param(0, Parent()), \r\n    __metadata('design:paramtypes', [MdDialogContainer, ElementRef])\r\n], MdDialogContent);\r\n/** Component for the dialog \"backdrop\", a transparent overlay over the rest of the page. */\r\nlet MdBackdrop = class {\r\n    constructor(dialogRef) {\r\n        this.dialogRef = dialogRef;\r\n    }\r\n    onClick() {\r\n        // TODO(jelbourn): Use MdDialogConfig to capture option for whether dialog should close on\r\n        // clicking outside.\r\n        this.dialogRef.close();\r\n    }\r\n};\r\nMdBackdrop = __decorate([\r\n    Component({\r\n        selector: 'md-backdrop',\r\n        host: { '(click)': 'onClick()' },\r\n    }),\r\n    View({ template: '' }), \r\n    __metadata('design:paramtypes', [MdDialogRef])\r\n], MdBackdrop);\r\n//# sourceMappingURL=dialog.js.map"]}