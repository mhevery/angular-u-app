{"version":3,"sources":["radio_dispatcher.js"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,oCAAoB,UAAS,SAAQ;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;wBAFY,CAAA,SAAQ,AAAC,uBAAjC,SAAS,AAAD;AACE,AAAI,UAAA,oBAIP,SAAM,kBAAgB,CACb,AAAD,CAAG;AACV,aAAG,WAAW,EAAI,GAAC,CAAC;QACxB,AAP8C,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAQ1C,eAAK,CAAL,UAAO,IAAG;AACN,sBAAU,QAAQ,AAAC,CAAC,IAAG,WAAW,GAAG,SAAC,CAAA;mBAAM,CAAA,CAAA,AAAC,CAAC,IAAG,CAAC;YAAA,EAAC,CAAC;UACxD;AAEA,eAAK,CAAL,UAAO,QAAO,CAAG;AACb,sBAAU,KAAK,AAAC,CAAC,IAAG,WAAW,CAAG,SAAO,CAAC,CAAC;UAC/C;AAAA,aAb4D,CAAC;MACzD,AAAC,EAAC,EAJ4D;IAEvC;EAC3B,CAAA;AADI,CAAC,CAAC;AAgBiC","file":"angular2_material/src/components/radio/radio_dispatcher.js","sourcesContent":["import { ListWrapper } from 'angular2/src/facade/collection';\r\n/**\r\n * Class for radio buttons to coordinate unique selection based on name.\r\n * Indended to be consumed as an Angular service.\r\n */\r\nexport class MdRadioDispatcher {\r\n    constructor() {\r\n        this.listeners_ = [];\r\n    }\r\n    /** Notify other nadio buttons that selection for the given name has been set. */\r\n    notify(name) {\r\n        ListWrapper.forEach(this.listeners_, (f) => f(name));\r\n    }\r\n    /** Listen for future changes to radio button selection. */\r\n    listen(listener) {\r\n        ListWrapper.push(this.listeners_, listener);\r\n    }\r\n}\r\n//# sourceMappingURL=radio_dispatcher.js.map"]}