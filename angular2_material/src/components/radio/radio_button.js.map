{"version":3,"sources":["radio_button.js"],"names":[],"mappings":"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","file":"angular2_material/src/components/radio/radio_button.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Component, View, onChange, Parent, Attribute, Optional } from 'angular2/angular2';\r\nimport { isPresent, StringWrapper, NumberWrapper } from 'angular2/src/facade/lang';\r\nimport { ObservableWrapper, EventEmitter } from 'angular2/src/facade/async';\r\nimport { ListWrapper } from 'angular2/src/facade/collection';\r\nimport { MdRadioDispatcher } from 'angular2_material/src/components/radio/radio_dispatcher';\r\nimport { KEY_UP, KEY_DOWN, KEY_SPACE } from 'angular2_material/src/core/constants';\r\n// TODO(jelbourn): Behaviors to test\r\n// Disabled radio don't select\r\n// Disabled radios don't propagate click event\r\n// Radios are disabled by parent group\r\n// Radios set default tab index iff not in parent group\r\n// Radios are unique-select\r\n// Radio updates parent group's value\r\n// Change to parent group's value updates the selected child radio\r\n// Radio name is pulled on parent group\r\n// Radio group changes on arrow keys\r\n// Radio group skips disabled radios on arrow keys\r\nvar _uniqueIdCounter = 0;\r\nexport let MdRadioGroup = class {\r\n    constructor(tabindex, disabled, radioDispatcher) {\r\n        this.name_ = `md-radio-group-${_uniqueIdCounter++}`;\r\n        this.radios_ = [];\r\n        this.change = new EventEmitter();\r\n        this.radioDispatcher = radioDispatcher;\r\n        this.selectedRadioId = '';\r\n        this.disabled_ = false;\r\n        // The simple presence of the `disabled` attribute dictates disabled state.\r\n        this.disabled = isPresent(disabled);\r\n        // If the user has not set a tabindex, default to zero (in the normal document flow).\r\n        this.tabindex = isPresent(tabindex) ? NumberWrapper.parseInt(tabindex, 10) : 0;\r\n    }\r\n    /** Gets the name of this group, as to be applied in the HTML 'name' attribute. */\r\n    getName() {\r\n        return this.name_;\r\n    }\r\n    get disabled() {\r\n        return this.disabled_;\r\n    }\r\n    set disabled(value) {\r\n        this.disabled_ = isPresent(value) && value !== false;\r\n    }\r\n    /** Change handler invoked when bindings are resolved or when bindings have changed. */\r\n    onChange(_) {\r\n        // If the component has a disabled attribute with no value, it will set disabled = ''.\r\n        this.disabled = isPresent(this.disabled) && this.disabled !== false;\r\n        // If the value of this radio-group has been set or changed, we have to look through the\r\n        // child radio buttons and select the one that has a corresponding value (if any).\r\n        if (isPresent(this.value) && this.value != '') {\r\n            this.radioDispatcher.notify(this.name_);\r\n            ListWrapper.forEach(this.radios_, (radio) => {\r\n                if (radio.value == this.value) {\r\n                    radio.checked = true;\r\n                    this.selectedRadioId = radio.id;\r\n                    this.activedescendant = radio.id;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /** Update the value of this radio group from a child md-radio being selected. */\r\n    updateValue(value, id) {\r\n        this.value = value;\r\n        this.selectedRadioId = id;\r\n        this.activedescendant = id;\r\n        ObservableWrapper.callNext(this.change, null);\r\n    }\r\n    /** Registers a child radio button with this group. */\r\n    register(radio) {\r\n        ListWrapper.push(this.radios_, radio);\r\n    }\r\n    /** Handles up and down arrow key presses to change the selected child radio. */\r\n    onKeydown(event) {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        switch (event.keyCode) {\r\n            case KEY_UP:\r\n                this.stepSelectedRadio(-1);\r\n                event.preventDefault();\r\n                break;\r\n            case KEY_DOWN:\r\n                this.stepSelectedRadio(1);\r\n                event.preventDefault();\r\n                break;\r\n        }\r\n    }\r\n    // TODO(jelbourn): Replace this with a findIndex method in the collections facade.\r\n    getSelectedRadioIndex() {\r\n        for (var i = 0; i < this.radios_.length; i++) {\r\n            if (this.radios_[i].id == this.selectedRadioId) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /** Steps the selected radio based on the given step value (usually either +1 or -1). */\r\n    stepSelectedRadio(step) {\r\n        var index = this.getSelectedRadioIndex() + step;\r\n        if (index < 0 || index >= this.radios_.length) {\r\n            return;\r\n        }\r\n        var radio = this.radios_[index];\r\n        // If the next radio is line is disabled, skip it (maintaining direction).\r\n        if (radio.disabled) {\r\n            this.stepSelectedRadio(step + (step < 0 ? -1 : 1));\r\n            return;\r\n        }\r\n        this.radioDispatcher.notify(this.name_);\r\n        radio.checked = true;\r\n        ObservableWrapper.callNext(this.change, null);\r\n        this.value = radio.value;\r\n        this.selectedRadioId = radio.id;\r\n        this.activedescendant = radio.id;\r\n    }\r\n};\r\nMdRadioGroup = __decorate([\r\n    Component({\r\n        selector: 'md-radio-group',\r\n        lifecycle: [onChange],\r\n        events: ['change'],\r\n        properties: ['disabled', 'value'],\r\n        host: {\r\n            // TODO(jelbourn): Remove ^ when event retargeting is fixed.\r\n            '(^keydown)': 'onKeydown($event)',\r\n            '[tabindex]': 'tabindex',\r\n            '[attr.role]': '\"radiogroup\"',\r\n            '[attr.aria-disabled]': 'disabled',\r\n            '[attr.aria-activedescendant]': 'activedescendant'\r\n        }\r\n    }),\r\n    View({ templateUrl: 'angular2_material/src/components/radio/radio_group.html' }),\r\n    __param(0, Attribute('tabindex')),\r\n    __param(1, Attribute('disabled')), \r\n    __metadata('design:paramtypes', [String, String, MdRadioDispatcher])\r\n], MdRadioGroup);\r\nexport let MdRadioButton = class {\r\n    constructor(radioGroup, id, tabindex, radioDispatcher) {\r\n        // Assertions. Ideally these should be stripped out by the compiler.\r\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\r\n        this.radioGroup = radioGroup;\r\n        this.radioDispatcher = radioDispatcher;\r\n        this.value = null;\r\n        this.role = 'radio';\r\n        this.checked = false;\r\n        this.id = isPresent(id) ? id : `md-radio-${_uniqueIdCounter++}`;\r\n        // Whenever a radio button with the same name is checked, uncheck this radio button.\r\n        radioDispatcher.listen((name) => {\r\n            if (name == this.name) {\r\n                this.checked = false;\r\n            }\r\n        });\r\n        // When this radio-button is inside of a radio-group, the group determines the name.\r\n        if (isPresent(radioGroup)) {\r\n            this.name = radioGroup.getName();\r\n            this.radioGroup.register(this);\r\n        }\r\n        // If the user has not set a tabindex, default to zero (in the normal document flow).\r\n        if (!isPresent(radioGroup)) {\r\n            this.tabindex = isPresent(tabindex) ? NumberWrapper.parseInt(tabindex, 10) : 0;\r\n        }\r\n        else {\r\n            this.tabindex = -1;\r\n        }\r\n    }\r\n    /** Change handler invoked when bindings are resolved or when bindings have changed. */\r\n    onChange(_) {\r\n        if (isPresent(this.radioGroup)) {\r\n            this.name = this.radioGroup.getName();\r\n        }\r\n    }\r\n    /** Whether this radio button is disabled, taking the parent group into account. */\r\n    isDisabled() {\r\n        // Here, this.disabled may be true/false as the result of a binding, may be the empty string\r\n        // if the user just adds a `disabled` attribute with no value, or may be absent completely.\r\n        // TODO(jelbourn): If someone sets `disabled=\"disabled\"`, will this work in dart?\r\n        return this.disabled || (isPresent(this.disabled) && StringWrapper.equals(this.disabled, '')) ||\r\n            (isPresent(this.radioGroup) && this.radioGroup.disabled);\r\n    }\r\n    get disabled() {\r\n        return this.disabled_;\r\n    }\r\n    set disabled(value) {\r\n        this.disabled_ = isPresent(value) && value !== false;\r\n    }\r\n    /** Select this radio button. */\r\n    select(event) {\r\n        if (this.isDisabled()) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n        // Notifiy all radio buttons with the same name to un-check.\r\n        this.radioDispatcher.notify(this.name);\r\n        this.checked = true;\r\n        if (isPresent(this.radioGroup)) {\r\n            this.radioGroup.updateValue(this.value, this.id);\r\n        }\r\n    }\r\n    /** Handles pressing the space key to select this focused radio button. */\r\n    onKeydown(event) {\r\n        if (event.keyCode == KEY_SPACE) {\r\n            event.preventDefault();\r\n            this.select(event);\r\n        }\r\n    }\r\n};\r\nMdRadioButton = __decorate([\r\n    Component({\r\n        selector: 'md-radio-button',\r\n        lifecycle: [onChange],\r\n        properties: ['id', 'name', 'value', 'checked', 'disabled'],\r\n        host: {\r\n            '(keydown)': 'onKeydown($event)',\r\n            '[id]': 'id',\r\n            '[tabindex]': 'tabindex',\r\n            '[attr.role]': 'role',\r\n            '[attr.aria-checked]': 'checked',\r\n            '[attr.aria-disabled]': 'disabled'\r\n        }\r\n    }),\r\n    View({ templateUrl: 'angular2_material/src/components/radio/radio_button.html', directives: [] }),\r\n    __param(0, Optional()),\r\n    __param(0, Parent()),\r\n    __param(1, Attribute('id')),\r\n    __param(2, Attribute('tabindex')), \r\n    __metadata('design:paramtypes', [MdRadioGroup, String, String, MdRadioDispatcher])\r\n], MdRadioButton);\r\n//# sourceMappingURL=radio_button.js.map"]}