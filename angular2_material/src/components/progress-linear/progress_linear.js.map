{"version":3,"sources":["progress_linear.js"],"names":[],"mappings":"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","file":"angular2_material/src/components/progress-linear/progress_linear.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") return Reflect.decorate(decorators, target, key, desc);\r\n    switch (arguments.length) {\r\n        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);\r\n        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);\r\n        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);\r\n    }\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { Component, onChange, View, Attribute } from 'angular2/angular2';\r\nimport { isPresent, isBlank } from 'angular2/src/facade/lang';\r\nimport { Math } from 'angular2/src/facade/math';\r\nexport let MdProgressLinear = class {\r\n    constructor(mode) {\r\n        this.primaryBarTransform = '';\r\n        this.secondaryBarTransform = '';\r\n        this.mode = isPresent(mode) ? mode : Mode.DETERMINATE;\r\n    }\r\n    get value() {\r\n        return this.value_;\r\n    }\r\n    set value(v) {\r\n        if (isPresent(v)) {\r\n            this.value_ = MdProgressLinear.clamp(v);\r\n        }\r\n    }\r\n    onChange(_) {\r\n        // If the mode does not use a value, or if there is no value, do nothing.\r\n        if (this.mode == Mode['QUERY'] || this.mode == Mode['INDETERMINATE'] || isBlank(this.value)) {\r\n            return;\r\n        }\r\n        this.primaryBarTransform = this.transformForValue(this.value);\r\n        // The bufferValue is only used in buffer mode.\r\n        if (this.mode == Mode['BUFFER']) {\r\n            this.secondaryBarTransform = this.transformForValue(this.bufferValue);\r\n        }\r\n    }\r\n    /** Gets the CSS `transform` property for a progress bar based on the given value (0 - 100). */\r\n    transformForValue(value) {\r\n        // TODO(jelbourn): test perf gain of caching these, since there are only 101 values.\r\n        var scale = value / 100;\r\n        var translateX = (value - 100) / 2;\r\n        return `translateX(${translateX}%) scale(${scale}, 1)`;\r\n    }\r\n    /** Clamps a value to be between 0 and 100. */\r\n    static clamp(v) {\r\n        return Math.max(0, Math.min(100, v));\r\n    }\r\n};\r\nMdProgressLinear = __decorate([\r\n    Component({\r\n        selector: 'md-progress-linear',\r\n        lifecycle: [onChange],\r\n        properties: ['value', 'bufferValue'],\r\n        host: {\r\n            '[attr.role]': '\"progressbar\"',\r\n            '[attr.aria-valuemin]': '\"0\"',\r\n            '[attr.aria-valuemax]': '\"100\"',\r\n            '[attr.aria-valuenow]': 'value'\r\n        }\r\n    }),\r\n    View({\r\n        templateUrl: 'angular2_material/src/components/progress-linear/progress_linear.html',\r\n        directives: []\r\n    }),\r\n    __param(0, Attribute('md-mode')), \r\n    __metadata('design:paramtypes', [String])\r\n], MdProgressLinear);\r\n/** @enum {string} Progress-linear modes. */\r\nvar Mode = {\r\n    'DETERMINATE': 'determinate',\r\n    'INDETERMINATE': 'indeterminate',\r\n    'BUFFER': 'buffer',\r\n    'QUERY': 'query'\r\n};\r\n//# sourceMappingURL=progress_linear.js.map"]}